@model List<ChatBot.Controllers.UserAdminViewModel>
@using ChatBot.Models
@{
    ViewData["Title"] = "Admin Dashboard";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f5f7fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .dashboard-container {
            max-width: 1400px;
            margin: 30px auto;
        }

        .card {
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
        }

        .filter-export-panel {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
        }

            .filter-export-panel .form-control,
            .filter-export-panel .form-select {
                width: auto;
                min-width: 180px;
            }

        .action-cell {
            min-width: 260px;
        }

        .badge-status {
            font-size: 0.9em;
            padding: 5px 10px;
        }

        .table-container {
            overflow-x: auto;
        }

        .pagination-container {
            margin-top: 20px;
            display: flex;
            justify-content: center;
        }

        .btn-group .btn {
            margin-right: 5px;
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <h2 class="mb-4 text-primary">Admin Dashboard</h2>

        @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
        {
            <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
        }
        @if (!string.IsNullOrEmpty(TempData["SuccessMessage"]?.ToString()))
        {
            <div class="alert alert-success">@TempData["SuccessMessage"]</div>
        }
        @if (!string.IsNullOrEmpty(TempData["ErrorMessage"]?.ToString()))
        {
            <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
        }

       @*  <div class="card mb-4">
            <div class="card-body">
                <form asp-action="ExportUsers" method="post" class="filter-export-panel align-items-end" id="filterForm">
                    <div>
                        <label class="form-label">From Date</label>
                        <input type="date" name="dateFrom" id="dateFrom" class="form-control">
                    </div>
                    <div>
                        <label class="form-label">To Date</label>
                        <input type="date" name="dateTo" id="dateTo" class="form-control">
                    </div>
                    <div>
                        <label class="form-label">Search</label>
                        <input type="text" name="searchText" id="searchInput" class="form-control" placeholder="Name, Email, Phone">
                    </div>
                    <div>
                        <label class="form-label">Interview Status</label>
                        <select name="statusFilter" id="statusFilter" class="form-select">
                            <option value="">All</option>
                            <option value="Submitted">Submitted</option>
                            <option value="Completed but not submitted">Completed but not submitted</option>
                            <option value="In progress">In progress</option>
                            <option value="Not started">Not started</option>
                        </select>
                    </div>
                    <div>
                        <label class="form-label">Email Sent</label>
                        <select name="emailSentFilter" id="emailSentFilter" class="form-select">
                            <option value="">All</option>
                            <option value="Yes">Sent</option>
                            <option value="No">Not Sent</option>
                        </select>
                    </div>
                    <div>
                        <label class="form-label">WhatsApp Sent</label>
                        <select name="whatsappSentFilter" id="whatsappSentFilter" class="form-select">
                            <option value="">All</option>
                            <option value="Yes">Sent</option>
                            <option value="No">Not Sent</option>
                        </select>
                    </div>
                    <div>
                        <label class="form-label">Sort by Date</label>
                        <select id="dateSort" class="form-select">
                            <option value="">None</option>
                            <option value="asc">Oldest First</option>
                            <option value="desc">Newest First</option>
                        </select>
                    </div>
                    <div>
                        <button type="submit" class="btn btn-success">Export Excel</button>
                    </div>
                </form>
            </div>
        </div> *@

        <div class="card mb-4">
            <div class="card-body">
                <form asp-action="ExportUsers" method="post" id="filterForm">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label class="form-label">From Date</label>
                            <input type="date" name="dateFrom" id="dateFrom" class="form-control">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">To Date</label>
                            <input type="date" name="dateTo" id="dateTo" class="form-control">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Search</label>
                            <input type="text" name="searchText" id="searchInput" class="form-control" placeholder="Name, Email, Phone">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Interview Status</label>
                            <select name="statusFilter" id="statusFilter" class="form-select">
                                <option value="">All</option>
                                <option value="Submitted">Submitted</option>
                                <option value="Completed but not submitted">Completed but not submitted</option>
                                <option value="In progress">In progress</option>
                                <option value="Not started">Not started</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Email Sent</label>
                            <select name="emailSentFilter" id="emailSentFilter" class="form-select">
                                <option value="">All</option>
                                <option value="Yes">Sent</option>
                                <option value="No">Not Sent</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">WhatsApp Sent</label>
                            <select name="whatsappSentFilter" id="whatsappSentFilter" class="form-select">
                                <option value="">All</option>
                                <option value="Yes">Sent</option>
                                <option value="No">Not Sent</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Sort by Date</label>
                            <select id="dateSort" class="form-select">
                                <option value="">None</option>
                                <option value="asc">Oldest First</option>
                                <option value="desc">Newest First</option>
                            </select>
                        </div>
                        <div class="col-md-3 d-flex align-items-end justify-content-end">
                            <button type="submit" class="btn btn-success w-100">Export Excel</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>


        @if (Model.Any())
        {
            <div class="card">
                <div class="card-body table-container">
                    <table class="table table-striped table-hover table-bordered align-middle">
                        <thead class="table-primary">
                            <tr>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Phone</th>
                                <th>Created At</th>
                                <th>ID Proof</th>
                                <th>Interview Count</th>
                                <th>Interview Status</th>
                                <th>Email</th>
                                <th>WhatsApp</th>
                                <th>Interview Video</th>
                                <th>Conversation</th>
                                <th class="action-cell">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="userTableBody">
                            @foreach (var user in Model)
                            {
                                <tr class="user-row"
                                    data-name="@user.Name.ToLower()"
                                    data-email="@user.Email.ToLower()"
                                    data-phone="@user.Phone.ToLower()"
                                    data-date="@(user.CreatedAt?.ToString("yyyy-MM-dd HH:mm:ss") ?? "")"
                                    data-status="@user.InterviewStatus"
                                    data-emailsent="@(user.EmailSent ? "Yes" : "No")"
                                    data-whatsappsent="@(user.WhatsAppSent ? "Yes" : "No")">
                                    <td>@user.Name</td>
                                    <td>@user.Email</td>
                                    <td>@user.Phone</td>
                                    <td>@(user.CreatedAt?.ToString("yyyy-MM-dd HH:mm:ss") ?? "N/A")</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(user.IDProofPath))
                                        {
                                            <a href="@Url.Action("ViewIDProof", "Chat", new { filePath = user.IDProofPath })" target="_blank" class="btn btn-sm btn-outline-primary">View</a>
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                    <td>@user.InterviewCount</td>
                                    <td>
                                        <span class="badge bg-info badge-status">@user.InterviewStatus</span>
                                    </td>
                                    <td>
                                        <span class="badge @(user.EmailSent ? "bg-success" : "bg-secondary") badge-status">
                                            @(user.EmailSent ? "Sent" : "Not Sent")
                                        </span>
                                    </td>
                                    <td>
                                        <span class="badge @(user.WhatsAppSent ? "bg-success" : "bg-secondary") badge-status">
                                            @(user.WhatsAppSent ? "Sent" : "Not Sent")
                                        </span>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(user.InterviewVideoPath))
                                        {
                                            <a href="@Url.Action("ViewInterviewVideo", "Chat", new { filePath = user.InterviewVideoPath })" target="_blank" class="btn btn-sm btn-outline-primary">View</a>
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                    <td>
                                        <a href="@Url.Action("ViewConversation", new { userId = user.UserId })" class="btn btn-sm btn-outline-info">View</a>
                                    </td>
                                    <td>
                                        @if (user.InterviewStatus == "Submitted")
                                        {
                                            var availableTemplates = (ViewData["Templates"] as List<MessageTemplate> ?? new List<MessageTemplate>())
                                            .Where(t => (t.MessageType == "Email" && !string.IsNullOrEmpty(user.Email)) ||
                                            (t.MessageType == "WhatsApp" && !string.IsNullOrEmpty(user.Phone) && !user.WhatsAppSent))
                                            .ToList();
                                            if (availableTemplates.Any())
                                            {
                                                <form asp-action="SendPassMessage" method="post" class="d-inline">
                                                    <input type="hidden" name="userId" value="@user.UserId" />
                                                    <div class="btn-group">
                                                        <select name="templateName" class="form-select form-select-sm">
                                                            @foreach (var template in availableTemplates)
                                                            {
                                                                <option value="@template.TemplateName">@template.TemplateName (@template.MessageType)</option>
                                                            }
                                                        </select>
                                                        <button type="submit" class="btn btn-sm btn-success">Send</button>
                                                    </div>
                                                </form>
                                            }
                                            else
                                            {
                                                <span class="text-muted">No Templates</span>
                                            }
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="pagination-container">
                        <nav>
                            <ul class="pagination" id="pagination"></ul>
                        </nav>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-info">No user details available.</div>
        }
    </div>

    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            const rowsPerPage = 10;
            let currentPage = 1;
            const $allRows = $('#userTableBody tr');

            function filterRows() {
                const searchText = $('#searchInput').val().toLowerCase();
                const statusFilter = $('#statusFilter').val();
                const emailSentFilter = $('#emailSentFilter').val();
                const whatsappSentFilter = $('#whatsappSentFilter').val();
                const dateSort = $('#dateSort').val();

                const dateFrom = $('#dateFrom').val();
                const dateTo = $('#dateTo').val();

                let $filteredRows = $allRows.filter(function () {
                    const $row = $(this);
                    const name = $row.data('name');
                    const email = $row.data('email');
                    const phone = $row.data('phone');
                    const status = $row.data('status');
                    const emailSent = $row.data('emailsent');
                    const whatsappSent = $row.data('whatsappsent');
                    const createdAt = $row.data('date');

                    const matchesSearch = !searchText || name.includes(searchText) || email.includes(searchText) || phone.includes(searchText);
                    const matchesStatus = !statusFilter || status === statusFilter;
                    const matchesEmailSent = !emailSentFilter || emailSent === emailSentFilter;
                    const matchesWhatsappSent = !whatsappSentFilter || whatsappSent === whatsappSentFilter;

                    let matchesDateRange = true;
                    if (dateFrom) {
                        matchesDateRange = matchesDateRange && (createdAt >= dateFrom + " 00:00:00");
                    }
                    if (dateTo) {
                        matchesDateRange = matchesDateRange && (createdAt <= dateTo + " 23:59:59");
                    }

                    return matchesSearch && matchesStatus && matchesEmailSent && matchesWhatsappSent && matchesDateRange;
                });

                if (dateSort) {
                    $filteredRows = $filteredRows.sort(function (a, b) {
                        const dateA = $(a).data('date') || '';
                        const dateB = $(b).data('date') || '';
                        if (dateA === '' && dateB === '') return 0;
                        if (dateA === '') return dateSort === 'asc' ? 1 : -1;
                        if (dateB === '') return dateSort === 'asc' ? -1 : 1;
                        return dateSort === 'asc' ? dateA.localeCompare(dateB) : dateB.localeCompare(dateA);
                    });
                }

                return $filteredRows;
            }

            function paginateRows($rows) {
                const totalRows = $rows.length;
                const totalPages = Math.ceil(totalRows / rowsPerPage);
                if (currentPage > totalPages) currentPage = totalPages || 1;

                $allRows.hide();
                $rows.hide().slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage).show();

                $('#pagination').empty();

                if (totalPages > 1) {
                    const $prev = $('<li class="page-item"><a class="page-link" href="#">Previous</a></li>');
                    if (currentPage === 1) $prev.addClass('disabled');
                    $prev.click(function (e) {
                        e.preventDefault();
                        if (currentPage > 1) {
                            currentPage--;
                            paginateRows($rows);
                        }
                    });
                    $('#pagination').append($prev);

                    for (let i = 1; i <= totalPages; i++) {
                        const $page = $(`<li class="page-item"><a class="page-link" href="#">${i}</a></li>`);
                        if (i === currentPage) $page.addClass('active');
                        $page.click(function (e) {
                            e.preventDefault();
                            currentPage = i;
                            paginateRows($rows);
                        });
                        $('#pagination').append($page);
                    }

                    const $next = $('<li class="page-item"><a class="page-link" href="#">Next</a></li>');
                    if (currentPage === totalPages) $next.addClass('disabled');
                    $next.click(function (e) {
                        e.preventDefault();
                        if (currentPage < totalPages) {
                            currentPage++;
                            paginateRows($rows);
                        }
                    });
                    $('#pagination').append($next);
                }
            }

            function updateTable() {
                const $filteredRows = filterRows();
                paginateRows($filteredRows);
            }

            $('#searchInput, #statusFilter, #emailSentFilter, #whatsappSentFilter, #dateSort, #dateFrom, #dateTo').on('input change', function () {
                currentPage = 1;
                updateTable();
            });

            updateTable();
        });
    </script>
</body>
</html>
